
업로드 필수 설정
dependency commons-io, commons-fileupload 
input file로 업로드 요청 + form에 multipart 데이터 넘기기 추가
multipart httpservlet request- 로 파일 요청 받기 >> 서비스단에서 처리 컨트롤러 XX



=============
스프링 MVC는 XML/JSON 처리 방식 제공함. 
-@RequestBody
  contenttype으로 몸체 데이터 형식을 지정한다 (이건 해더에서 설정)
  String 문자열을 또는 JSON 형식을 자바 객체로 변환
-@ResponseBody
  자바 객체를 JSON/XML 형식 문자열 로 변환.
  >>스프링, AJAX 같이 사용하려면 알아야함. 
  
  스트링 객체로 처리되면 return body @ResponseBody로 응답하기. 
  화면 출력 아니고 데이터 보내주었던 곳으로 돌려주고 그쪽에서 데이터 연산해서 출력.
  HTTP 응답 결과물이 나온다.
  
  ---> 받은 데이터를 MessageConverter > HTTPMessageConverter로 변환 처리.
    자바 객체 요청/응답 변환 처리. 
    -다양한 타입 처리 가능.
    -<mvc:annotation-driven> / @EnableWebMvc 사용하면 해당 클래스가 포함된다. 
    
    -String-문자열 / RootElement-XML / Jackson2-JSON
    
    실습 1.3
      -@XmlRootElement / @XmlType 로 읽기
      -root element = xml에서 처음 나오는 태그
      -xml element = root element child
      -propOrder = 순서
      
      xml을 자바로 변환하고 싶으면 @RequestBody로 메시지 리스트에 넣으면된다. 
      
      함수로 XML로 보내고 받기 사용.
       parding 데이터를 함수 안에 넣으면 된다. 
      
      
    JSON-Javascript Object Notation- 속성-값으로 이루어진 데이터 오브젝트를 전달한다. 
      
업로드-MultipartResolver
    CommonsMultipartResolver 빈 등록
    web.xml에 max-file-size, max-request-size, file-size-threshold설정 필요.
    multipartFile.getBytes() - 파일 데이터 구함.
    
업로드 파일 접근 방식
  -@RequestParam
  -MultipartHttpServletRequest
  -자바빈 커멘드 객체에 넣을 수 있다. 
  
웹 소켓
  웹 서버간 양방향 통신을 위한 표준 HTTP프로토컬 기반
  pom- spring-websocket dependency
  <websocket:handler> 인터페이스 필요
  
 설명
 TextWebSocketHandler-Text로 주고 받기
  afterConnectionEstablished- 웹소켓 클라이언트가 특정 엔드포인트 연결시
  handleTextMessage-처리.
  .xml- websocket, handler.
  
  HTML
   -new WebSocket("웹 소켓 요청 경로")
   onMessage로 메시지 받아 실행.
   입력 값을 서버에 전송 wSocket.send()
   
   -스프링 웹 소켓, 쪽지---> 검색!
   
   유저 설정
    WebSocketSession
    -->맵에 세션 ID, 세션. 
    
    웹 소켓 지원 않을 시
    SockJS 사용- 라이브러리 필요
    
    
    
    
   
   
  
  
  
      
