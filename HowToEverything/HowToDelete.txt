



delete












=====================================


@RequestMapping("/delete.do")
	public ModelAndView boardDelete(HttpServletRequest request, HttpSession session){
		String userId = (String) session.getAttribute("userId");
		int idx = Integer.parseInt(request.getParameter("idx"));
		
		BoardModel board = boardService.getOneArticle(idx);
		
		ModelAndView mav = new ModelAndView();
		
		if(!userId.equals(board.getWriterId())){
			mav.addObject("errCode", "1");	// it's forbidden connection
			mav.addObject("idx", idx);
			mav.setViewName("redirect:view.do");
		} else {
			List<BoardCommentModel> commentList = boardService.getCommentList(idx); // check comments
			if(commentList.size() > 0) {
				mav.addObject("errCode","2");
				mav.addObject("idx",idx);
				mav.setViewName("redirect:view.do");
			} else {
				// if: when the article has upload file - remove that
				if(board.getFileName() != null){
					File removeFile = new File(uploadPath + board.getFileName());
					removeFile.delete();
				}
				
				boardService.deleteArticle(idx);
				
				mav.setViewName("redirect:list.do");
				
			}
		}
		return mav;
	}

	@RequestMapping("/commentDelete.do")
	public ModelAndView commendDelete(HttpServletRequest request, HttpSession session){
		int idx=Integer.parseInt(request.getParameter("idx"));
		int linkedArticleNum=Integer.parseInt(request.getParameter("linkedArticleNum"));
			
		String userId = (String) session.getAttribute("userId");
		BoardCommentModel comment = boardService.getOneComment(idx);
		
		ModelAndView mav=new ModelAndView();
		
		if(!userId.equals(comment.getWriterId())) {
			mav.addObject("errCode","1");
		} else {
			boardService.deleteComment(idx);
		}
		
		mav.addObject("idx", linkedArticleNum);
		mav.setViewName("redirect:view.do");
		
		return mav;
	}
